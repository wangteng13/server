#
# Purpose:
#   This test verifies that sequence DML updates, i.e. NEXTVAL and SETVAL,
# respect the binlog_row_image variable value when written into the binary log.
# In particular, it ensures that only changed columns are written with MINIMAL
# image mode, and all columns are written otherwise.
#
# Methodology
#   After issuing a sequence update, ensure that both 1) it was replicated
# correctly, and 2) it was binlogged respective to the binlog_row_image value.
# The sequence table does not use caching to ensure each update is immediately
# binlogged. Each command is binlogged into its own unique log file, and the
# entirety of the file is analyzed for correctness of its sequence event.
# Specifically, mysqlbinlog is used in verbose mode so it outputs the columns
# which belong to the event, and the columns are analyzed to ensure the correct
# ones were logged.
#
# References:
#   MDEV-28487: sequences not respect value of binlog_row_image with select
#               nextval(seq_gen)
#
--source include/master-slave.inc
--source include/have_binlog_format_row.inc

--echo #
--echo # Test initialization
--connection master

# Used to ensure binary log correctness
--let $mysqlbinlog_out_file=$MYSQLTEST_VARDIR/tmp/binlog_decoded.out
--let SEARCH_FILE=$mysqlbinlog_out_file

--echo # Create sequence without cache so updates are immediately binlogged
create sequence s1 cache=0;

--echo #
--echo # Test Case 1) SETVAL with binlog_row_image=MINIMAL should write only
--echo # columns @1 and @8 to the binary log
--echo #

--echo # set MINIMAL for both tests 1 and 2
--let $row_img_set=master:MINIMAL:N,slave:MINIMAL:Y
--source include/rpl_row_img_set.inc

FLUSH LOGS;
SELECT SETVAL(s1, 10);
--let $expected_results= Only columns @1 and @8 should be written to the binary log
--source include/rpl_sequence_binlog_row_image.inc


--echo #
--echo # Test Case 2) NEXTVAL with binlog_row_image=MINIMAL should write only
--echo # columns @1 and @8 to the binary log
--echo #
--connection master

FLUSH LOGS;
SELECT NEXTVAL(s1);

--let $expected_results= Only columns @1 and @8 should be written to the binary log
--source include/rpl_sequence_binlog_row_image.inc


--echo #
--echo # Test Case 3) SETVAL with binlog_row_image=NOBLOB should write all
--echo # columns to the binary log
--echo #

--echo # set NOBLOB for both tests 3 and 4
--connection master
--let $row_img_set=master:NOBLOB:N,slave:NOBLOB:Y
--source include/rpl_row_img_set.inc

FLUSH LOGS;
SELECT SETVAL(s1, 20);
--let $expected_results= All columns should be written to the binary log
--source include/rpl_sequence_binlog_row_image.inc


--echo #
--echo # Test Case 4) NEXTVAL with binlog_row_image=NOBLOB should write all
--echo # columns to the binary log
--echo #

--connection master
FLUSH LOGS;
SELECT NEXTVAL(s1);
--let $expected_results= All columns should be written to the binary log
--source include/rpl_sequence_binlog_row_image.inc


--echo #
--echo # Test Case 5) SETVAL with binlog_row_image=FULL should write all
--echo # columns to the binary log
--echo #

--echo # set FULL for both tests 3 and 4
--let $row_img_set=master:FULL:N,slave:FULL:Y
--source include/rpl_row_img_set.inc

--connection master
FLUSH LOGS;
SELECT SETVAL(s1, 30);
--let $expected_results= All columns should be written to the binary log
--source include/rpl_sequence_binlog_row_image.inc


--echo #
--echo # Test Case 6) NEXTVAL with binlog_row_image=FULL should write all
--echo # columns to the binary log
--echo #

--connection master
FLUSH LOGS;
SELECT NEXTVAL(s1);
--let $expected_results= All columns should be written to the binary log
--source include/rpl_sequence_binlog_row_image.inc

--echo #
--echo # Cleanup

--connection master
DROP TABLE s1;
--source include/save_master_gtid.inc

--connection slave
--source include/sync_with_master_gtid.inc

--source include/rpl_end.inc
--echo # End of tests

